require "bundler/setup"
require "bundler/gem_tasks"
require "rspec/core/rake_task"

RSpec::Core::RakeTask.new(:spec)

task :compile, [:compiler, :target] do |t, args|
  require "interscript"

  compiler, ext = case args[:compiler]
  when "ruby"
    require "interscript/compiler/ruby"
    [Interscript::Compiler::Ruby, "rb"]
  when "javascript"
    require "interscript/compiler/javascript"
    [Interscript::Compiler::Javascript, "js"]
  end

  FileUtils.mkdir_p(args[:target])

  maplist = {}

  Interscript.maps.each do |map|
    code = compiler.(map).code
    File.write(args[:target] + "/" + map + "." + ext, code)
    maplist[map] = nil
  end

  Interscript.maps(libraries: true).each do |map|
    code = compiler.(map).code
    File.write(args[:target] + "/" + map + "." + ext, code)
  end

  File.write(args[:target] + "/index.json", maplist.to_json)
end

task :version, [:ver] do |t, ver|
  ver = ver[:ver]

  rubyver = File.read(rubyfile = __dir__+"/lib/interscript/version.rb")
  jsver   = File.read(jsfile   = __dir__+"/../js/package.json")
  mapsver = File.read(mapsfile = __dir__+"/../maps/interscript-maps.gemspec")

  rubyver = rubyver.gsub(/(VERSION = ")([0-9a-z.-]*)(")/,                "\\1#{ver}\\3")
  jsver   = jsver.gsub(/("version": ")([0-9a-z.-]*)(")/,                 "\\1#{ver}\\3")
  mapsver = mapsver.gsub(/(INTERSCRIPT_MAPS_VERSION=")([0-9a-z.-]*)(")/, "\\1#{ver}\\3")

  File.write(rubyfile, rubyver)
  File.write(jsfile,   jsver)
  File.write(mapsfile, mapsver)
end

task :visualize do
  require "fileutils"
  require "interscript"
  require "interscript/visualize"

  FileUtils.rm_rf(dir = __dir__+"/visualizations/")
  FileUtils.mkdir_p(dir)

  Interscript.maps.each do |map|
    html = Interscript::Visualize.(map)
    File.write(dir+map+".html", html)
  end
end

task :default => :spec
